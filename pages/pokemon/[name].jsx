import Head from "next/head";
import Image from "next/image";
import Navbar from "../../components/Navbar";
import DropdownMenu from "../../components/Sidebar";
import React, { useState, useEffect } from "react";
import axios from "axios";
import Link from "next/link";
import { useRouter } from "next/router";
import PokemonStats from "../../components/PokemonStats";
import { types, hexToGrayscale } from "../../functions/color";

function capitalize(str) {
  return str ? str.charAt(0).toUpperCase() + str.slice(1) : "";
}

function meterToFeet(meter) {
  let m1 = meter * 3.2808;
  let s1 = Math.floor(m1);
  let s2 = Math.round(12 * (m1 - s1), 2);
  return s1 + "'" + s2 + '"';
}
export default function PokemonDetails() {
  const router = useRouter();
  const [open, setOpen] = useState(false);
  const [pokemon, setPokemon] = useState([]);
  const [details, setDetails] = useState([]);
  const [description, setDescription] = useState([]);
  const { name } = router.query;

  useEffect(() => {
    if (router.isReady) {
      axios
        .get(`https://pokeapi.co/api/v2/pokemon/${name}`)
        .then((res) => {
          const getPokemon = async () => {
            try {
              setPokemon(res.data);
              axios.get(res.data.species.url).then((res) => {
                const getDetails = async () => {
                  setDetails(res.data);
                  setDescription(
                    res.data.flavor_text_entries.filter(function (el) {
                      return el.language?.name == "en";
                    })
                  );
                };
                getDetails();
              });
            } catch (err) {
              console.log(err);
            }
          };
          getPokemon();
        })
        .catch((err) => console.log(err));
    }
  }, [router.isReady]);
  return (
    <div>
      <Head>
        <title>PokéStop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <DropdownMenu open={open} setOpen={setOpen} />

      {/* <div className="bg-[url('../public/assets/background.jpg')] bg-no-repeat bg-cover fixed min-h-screen w-screen -z-50"></div> */}
      <div
        style={{
          // background: `${
          //   pokemon.types &&
          //   `linear-gradient(45deg, ${types[pokemon.types[0].type.name][1]}, ${
          //     types[pokemon.types[0].type.name][0]
          //   })`
          // }`,
          backgroundColor:
            pokemon.types && types[pokemon.types[0].type.name][1],
        }}
        className="bg-no-repeat bg-cover fixed min-h-screen w-screen -z-50"
      ></div>

      <main>
        <div className={`h-[150px] flex items-center justify-start mx-16`}>
          <Link href="/">
            <a
              className={
                pokemon.types &&
                `text-5xl text-${hexToGrayscale(
                  types[pokemon.types[0].type.name][1]
                )}`
              }
            >
              PokéStop
            </a>
          </Link>
        </div>
        <section
          className={
            pokemon.types &&
            `my-12 text-${hexToGrayscale(types[pokemon.types[0].type.name][1])}`
          }
        >
          <div className="mx-16">
            <div className="flex items-center">
              {/* Nama Pokemon */}
              <h1 className="text-8xl">
                {pokemon && capitalize(pokemon.name)}
              </h1>
              {/* Icon */}
              <Image
                src={`https://www.cpokemon.com/pokes/shuffle/${pokemon.id}.png`}
                height={100}
                width={100}
                alt={pokemon.name}
              />
            </div>
            {/* Tipe Pokemon */}
            <div className="flex gap-2">
              {pokemon.types &&
                pokemon.types.map((type) => (
                  <div
                    key={type.type.name}
                    className="flex flex-col items-center m-2"
                  >
                    <Image
                      src={`https://raw.githubusercontent.com/PokeMiners/pogo_assets/master/Images/Types/POKEMON_TYPE_${type.type.name.toUpperCase()}.png`}
                      height={50}
                      width={50}
                      alt={type.type.name}
                    />
                    <h3 className="text-2xl">{capitalize(type.type.name)}</h3>
                  </div>
                ))}
            </div>
          </div>
          <div className="h-full">
            <PokemonStats pokemon={pokemon} />
          </div>
        </section>

        {/* Info */}
        <section className="p-16 bg-[#fff] shadow-2xl  rounded-t-[50px]">
          <h2 className="text-xl">
            {description[0] && description[0].flavor_text.replace("\f", "\n")}
          </h2>
          {/* <table>
            <tbody>
              <tr>
                <th>Weight</th>
                <td>
                  {pokemon.weight / 10} kg (
                  {((pokemon.weight / 10) * 2.2046).toFixed(1)} lbs)
                </td>
              </tr>
              <tr>
                <th>Height</th>
                <td>
                  {pokemon.height / 10} m ({meterToFeet(pokemon.height / 10)})
                </td>
              </tr>
              <tr>
                <th>Shape</th>
                <td>{capitalize(details.shape.name)}</td>
              </tr>
              <tr>
                <th>Color</th>
                <td>{capitalize(details.color.name)}</td>
              </tr>
            </tbody>
          </table> */}
          {/* Base Stats */}
        </section>
      </main>

      <footer></footer>
    </div>
  );
}
